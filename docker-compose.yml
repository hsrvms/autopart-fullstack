version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "${DEV_PORT:-8080}:8080"
    volumes:
      - ./backend:/app
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=${POSTGRES_USER:-postgres}
      - DB_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - DB_NAME=${POSTGRES_DB:-autoparts}
      - DB_SSL_MODE=${DB_SSL_MODE:-disable}
    depends_on:
      db:
        condition: service_healthy
    tty: true
    stdin_open: true
    command: ["sh", "-c", "air -c .air.toml"]
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "${WEB_PORT:-80}:80"
    volumes:
      - ./frontend/web:/usr/share/nginx/html
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf
    environment:
      - API_BASE_URL=${FLUTTER_APP_BASE_URL:-http://localhost:8080}
      - API_URL=${FLUTTER_APP_API_URL:-http://localhost:8080/api}
    depends_on:
      - backend
    restart: unless-stopped

  db:
    image: postgres:14-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./backend/schema.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-autoparts}
    ports:
      - "${DB_PORT:-5432}:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data: